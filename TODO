TODO

- board, game: complete unit testing
- render: color

- SOLVER:
	- eg:
		solver = Minesweeper::Solver.new( games: 100 )
		solver.play
		solver.stats
	- rough procedure:
		- select a cell at random
		BEST:
		- revealed_cells.each
			- does num hiddens == adjacent mines?
				- YES: 
					- reveal all those hiddens
					- increment 'found'
		- if 'found' > 0, do it again
		NEXT BEST:
		- revealed_cells.each:
			- does num hiddens + flagged == adjacent_mines?
				- YES:
					- reveal those hiddens
					- increment 'found'
		- if 'found' > 0, start the loop over, always prefer best
		LEAST WORST:
		- of the revealed cells, find one with the lowest adjacent mine number, select it, start the loop over
		WORST:
		- select one at random
		

